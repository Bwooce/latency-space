server {
    listen 80;
    server_name .latency.space;
    
    # Handle Let's Encrypt validation challenges
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Comment out HTTPS redirect for now until certificates are set up
    # if ($host ~* ^([^.]+)\.latency\.space$) {
    #     return 301 https://$host$request_uri;
    # }
    
    # For all subdomains, serve over HTTP directly
    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Destination $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Commented out HTTPS server until certificates are set up
# server {
#     listen 443 ssl;
#     server_name latency.space *.latency.space;
#     
#     # SSL certificates will be added by certbot
#     
#     location / {
#         proxy_pass http://localhost:8080;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-For $remote_addr;
#         proxy_set_header X-Destination $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# Server for status dashboard
server {
    listen 80;
    server_name status.latency.space;
    
    location / {
        proxy_pass http://localhost:3000;  # Status service
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}