services:
  proxy:
    build: 
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "5353:53/udp"  # Changed from 53:53/udp to avoid conflict with system DNS
      - "5353:5353/udp" # General UDP
      - "1080:1080"     # SOCKS5 proxy
      - "9090:9090"     # Prometheus metrics
    volumes:
      - ./config:/etc/space-proxy
      - ./config/ssl:/etc/letsencrypt
      - ./certs:/app/certs  # For certificate persistence
    cap_add:
      - NET_ADMIN
    restart: always
    networks:
      - space-net

  status:
    build: 
      context: ./status
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - METRICS_URL=http://prometheus:9090
    networks:
      - space-net
    depends_on:
      - prometheus

  prometheus:
    build: 
      context: ./monitoring/prometheus
      dockerfile: Dockerfile
    ports:
      - "9091:9090" # Changed to avoid conflict with proxy metrics
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - space-net

  grafana:
    build: 
      context: ./monitoring/grafana
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    networks:
      - space-net
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - space-net

networks:
  space-net:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: